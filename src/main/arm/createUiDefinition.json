{
    "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
    "handler": "Microsoft.Azure.CreateUIDef",
    "version": "0.1.2-preview",
    "parameters": {
        "basics": [
            {
                "name": "infoForBeforeDeployment",
                "type": "Microsoft.Common.InfoBox",
                "visible": true,
                "options": {
                    "icon": "Info",
                    "text": "The Azure identity deploying this offer must have one of the following two sets of Azure role-based access control roles:<br> <li><a href='https://docs.microsoft.com/azure/role-based-access-control/built-in-roles#contributor'>Contributor</a> <b>and</b> <a href='https://docs.microsoft.com/azure/role-based-access-control/built-in-roles#user-access-administrator'>User Access Administrator</a> of the current subscription.</li><li><a href='https://docs.microsoft.com/azure/role-based-access-control/built-in-roles#owner'>Owner</a> of the current subscription.</li>"
                }
            },
            {
                "name": "howToReportIssues",
                "type": "Microsoft.Common.Section",
                "label": "Report issues, get help, and share feedback",
                "elements": [
                    {
                        "name": "howToReportIssueText",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you encounter problems during deployment of Liberty on Azure, open an issue.",
                            "link": {
                                "label": "Issue tracker",
                                "uri": "https://aka.ms/azure-liberty-aks-issues?version=${project.version}"
                            }
                        }
                    },
                    {
                        "name": "howToReportVendorIssueText",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you have problems with the offer after successful deployment, and you have purchased licenses that entitle you to IBM support for Liberty, open an issue.",
                            "link": {
                                "label": "IBM support",
                                "uri": "https://www.ibm.com/mysupport/"
                            }
                        }
                    },
                    {
                        "name": "howToCommunityHelp",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you want to interact directly with the Open Liberty community, check out the community options.",
                            "link": {
                                "label": "Community support",
                                "uri": "https://openliberty.io/support/"
                            }
                        }
                    },
                    {
                        "name": "howToStackOverflow",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you want to ask questions about WebSphere Liberty, please use the IBM support option or ask on StackOverflow.",
                            "link": {
                                "label": "StackOverflow",
                                "uri": "https://stackoverflow.com/questions/tagged/websphere-liberty"
                            }
                        }
                    },
                    {
                        "name": "survey",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "To get free help with Azure migration from the development team, fill out this survey.",
                            "link": {
                                "label": "Take survey",
                                "uri": "https://aka.ms/ibm-stack-migration-survey"
                            }
                        }
                    }
                ],
                "visible": true
            }
        ],
        "steps": [
            {
                "name": "Cluster",
                "label": "AKS",
                "subLabel": {
                    "preValidation": "Provide required info for cluster configuration",
                    "postValidation": "Done"
                },
                "bladeTitle": "AKS",
                "elements": [
                    {
                        "name": "clusterInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Azure Kubernetes Service (AKS)",
                        "elements": [
                            {
                                "name": "createCluster",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Create a new cluster?",
                                "defaultValue": "Yes",
                                "toolTip": "Select 'Yes' to create a new cluster, or select 'No' to provide an existing cluster.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Yes",
                                            "value": "true"
                                        },
                                        {
                                            "label": "No",
                                            "value": "false"
                                        }
                                    ],
                                    "required": true
                                }
                            },
                            {
                                "name": "vmSizeSelect",
                                "type": "Microsoft.Compute.SizeSelector",
                                "label": "VM size",
                                "toolTip": "The size of the virtual machines for the nodes in the cluster. This cannot be changed after creating the cluster.",
                                "recommendedSizes": [
                                    "Standard_DS2_v2"
                                ],
                                "constraints": {
                                    "excludedSizes": [
                                        "Standard_A0",
                                        "Standard_A1",
                                        "Standard_A1_v2",
                                        "Standard_F1",
                                        "Standard_F1s",
                                        "Standard_B12ms",
                                        "Standard_B16als_v2",
                                        "Standard_B16as_v2",
                                        "Standard_B16ls_v2",
                                        "Standard_B16ms",
                                        "Standard_B16pls_v2",
                                        "Standard_B16ps_v2",
                                        "Standard_B16s_v2",
                                        "Standard_B1ls",
                                        "Standard_B1ms",
                                        "Standard_B1s",
                                        "Standard_B20ms",
                                        "Standard_B2als_v2",
                                        "Standard_B2as_v2",
                                        "Standard_B2ats_v2",
                                        "Standard_B2ls_v2",
                                        "Standard_B2ms",
                                        "Standard_B2pls_v2",
                                        "Standard_B2ps_v2",
                                        "Standard_B2pts_v2",
                                        "Standard_B2s",
                                        "Standard_B2s_v2",
                                        "Standard_B2ts_v2",
                                        "Standard_B32als_v2",
                                        "Standard_B32as_v2",
                                        "Standard_B32ls_v2",
                                        "Standard_B32s_v2",
                                        "Standard_B4als_v2",
                                        "Standard_B4as_v2",
                                        "Standard_B4ls_v2",
                                        "Standard_B4ms",
                                        "Standard_B4pls_v2",
                                        "Standard_B4ps_v2",
                                        "Standard_B4s_v2",
                                        "Standard_B8als_v2",
                                        "Standard_B8as_v2",
                                        "Standard_B8ls_v2",
                                        "Standard_B8ms",
                                        "Standard_B8pls_v2",
                                        "Standard_B8ps_v2",
                                        "Standard_B8s_v2",
                                        "Standard_DS1_v2",
                                        "Standard_D1_v2",
                                        "Standard_DC1s_v2",
                                        "Standard_DC1ds_v3",
                                        "Standard_DC1s_v3",
                                        "Standard_DS11-1_v2",
                                        "Standard_DS12-1_v2",
                                        "Standard_D2plds_v5",
                                        "Standard_D4plds_v5",
                                        "Standard_D8plds_v5",
                                        "Standard_D16plds_v5",
                                        "Standard_D32plds_v5",
                                        "Standard_D48plds_v5",
                                        "Standard_D64plds_v5",
                                        "Standard_D2pls_v5",
                                        "Standard_D4pls_v5",
                                        "Standard_D8pls_v5",
                                        "Standard_D16pls_v5",
                                        "Standard_D32pls_v5",
                                        "Standard_D48pls_v5",
                                        "Standard_D64pls_v5",
                                        "Standard_D2pds_v5",
                                        "Standard_D4pds_v5",
                                        "Standard_D8pds_v5",
                                        "Standard_D16pds_v5",
                                        "Standard_D32pds_v5",
                                        "Standard_D48pds_v5",
                                        "Standard_D64pds_v5",
                                        "Standard_D2ps_v5",
                                        "Standard_D4ps_v5",
                                        "Standard_D8ps_v5",
                                        "Standard_D16ps_v5",
                                        "Standard_D32ps_v5",
                                        "Standard_D48ps_v5",
                                        "Standard_D64ps_v5",
                                        "Standard_E2pds_v5",
                                        "Standard_E4pds_v5",
                                        "Standard_E8pds_v5",
                                        "Standard_E16pds_v5",
                                        "Standard_E20pds_v5",
                                        "Standard_E32pds_v5",
                                        "Standard_E2ps_v5",
                                        "Standard_E4ps_v5",
                                        "Standard_E8ps_v5",
                                        "Standard_E16ps_v5",
                                        "Standard_E20ps_v5",
                                        "Standard_E32ps_v5"
                                    ]
                                },
                                "osPlatform": "Linux",
                                "count": "[int(steps('Cluster').clusterInfo.minCount)]",
                                "visible": "[bool(steps('Cluster').clusterInfo.createCluster)]"
                            },
                            {
                                "name": "minCount",
                                "type": "Microsoft.Common.Slider",
                                "min": 1,
                                "max": "[int(steps('Cluster').clusterInfo.maxCount)]",
                                "label": "Minimum node count",
                                "defaultValue": 1,
                                "showStepMarkers": false,
                                "toolTip": "Set the minimum node count for the cluster.",
                                "constraints": {
                                    "required": true
                                },
                                "visible": "[bool(steps('Cluster').clusterInfo.createCluster)]"
                            },
                            {
                                "name": "maxCount",
                                "type": "Microsoft.Common.Slider",
                                "min": "[int(steps('Cluster').clusterInfo.minCount)]",
                                "max": 100,
                                "label": "Maximum node count",
                                "defaultValue": 5,
                                "showStepMarkers": false,
                                "toolTip": "Set the maximum node count for the cluster.",
                                "constraints": {
                                    "required": true
                                },
                                "visible": "[bool(steps('Cluster').clusterInfo.createCluster)]"
                            },
                            {
                                "name": "clusterSelector",
                                "type": "Microsoft.Solutions.ResourceSelector",
                                "label": "Select cluster",
                                "toolTip": "Select the existing cluster.",
                                "resourceType": "Microsoft.ContainerService/managedClusters",
                                "options": {
                                    "filter": {
                                        "subscription": "onBasics",
                                        "location": "onBasics"
                                    }
                                },
                                "visible": "[not(bool(steps('Cluster').clusterInfo.createCluster))]"
                            }
                        ]
                    },
                    {
                        "name": "acrInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Azure Container Registry (ACR)",
                        "elements": [
                            {
                                "name": "createACR",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Create a new ACR instance?",
                                "defaultValue": "Yes",
                                "toolTip": "Select 'Yes' to create a new ACR instance, or select 'No' to provide an existing ACR instance.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Yes",
                                            "value": "true"
                                        },
                                        {
                                            "label": "No",
                                            "value": "false"
                                        }
                                    ],
                                    "required": true
                                }
                            },
                            {
                                "name": "enableAcrAdminInfo",
                                "type": "Microsoft.Common.InfoBox",
                                "options": {
                                    "icon": "Info",
                                    "text": "Make sure the Azure Container Registry has enabled admin user.",
                                    "uri": "https://docs.microsoft.com/en-us/azure/container-registry/container-registry-authentication#admin-account"
                                },
                                "visible": "[not(bool(steps('Cluster').acrInfo.createACR))]"
                            },
                            {
                                "name": "acrSelector",
                                "type": "Microsoft.Solutions.ResourceSelector",
                                "label": "Select ACR instance",
                                "toolTip": "Select the existing ACR instance.",
                                "resourceType": "Microsoft.ContainerRegistry/registries",
                                "options": {
                                    "filter": {
                                        "subscription": "onBasics"
                                    }
                                },
                                "visible": "[not(bool(steps('Cluster').acrInfo.createACR))]"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "section_appGateway",
                "label": "Load balancing",
                "subLabel": {
                    "preValidation": "Provide required information for load balancing",
                    "postValidation": "Done"
                },
                "bladeTitle": "Load balancing",
                "elements": [
                    {
                        "name": "appgwIngress",
                        "type": "Microsoft.Common.Section",
                        "label": "Application Gateway Ingress Controller",
                        "elements": [
                            {
                                "name": "enableAppGatewayText",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": true,
                                "options": {
                                    "text": "Select 'Yes' to configure an Application Gateway Ingress Controller. If Application Gateway is not enabled, the user can simply use the standard load balancer that AKS comes with.",
                                    "link": {
                                        "label": "Learn more",
                                        "uri": "https://aka.ms/azure-liberty-aks-app-gateway-ingress-controller"
                                    }
                                }
                            },
                            {
                                "name": "enableAppGateway",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Connect to Azure Application Gateway?",
                                "defaultValue": "No",
                                "toolTip": "Select 'Yes' to create an Azure Application Gateway Ingress as the load balancer for the cluster.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Yes",
                                            "value": true
                                        },
                                        {
                                            "label": "No",
                                            "value": false
                                        }
                                    ],
                                    "required": false
                                }
                            },
                            {
                                "name": "vnetInfo",
                                "type": "Microsoft.Common.InfoBox",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "icon": "Info",
                                    "text": "When creating a new virtual network, the subnet's address prefix is calculated automatically based on the virtual<br>network's address prefix. When using an existing virtual network, a minimum virtual network size of /24 and a minimum<br>subnet size of /24 are required. Additionally, the subnet must be dedicated only for use by the Application Gateway."
                                }
                            },
                            {
                                "name": "vnetForApplicationGateway",
                                "type": "Microsoft.Network.VirtualNetworkCombo",
                                "label": {
                                    "virtualNetwork": "Virtual network",
                                    "subnets": "Subnets"
                                },
                                "toolTip": {
                                    "virtualNetwork": "Select a virtual network in which to place the Application Gateway.",
                                    "subnets": "The subnet must be dedicated only for use by the Application Gateway."
                                },
                                "defaultValue": {
                                    "name": "[concat('olaks-vnet',take(guid(), 8))]",
                                    "addressPrefixSize": "/24"
                                },
                                "constraints": {
                                    "minAddressPrefixSize": "/24"
                                },
                                "options": {
                                    "hideExisting": false
                                },
                                "subnets": {
                                    "gatewaySubnet": {
                                        "label": "Subnet",
                                        "defaultValue": {
                                            "name": "ol-aks-gateway-subnet",
                                            "addressPrefixSize": "/24"
                                        },
                                        "constraints": {
                                            "minAddressPrefixSize": "/24",
                                            "minAddressCount": 250,
                                            "requireContiguousAddresses": false
                                        }
                                    }
                                },
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            },
                            {
                                "name": "appgwUsePrivateIP",
                                "type": "Microsoft.Common.CheckBox",
                                "label": "Configure frontend IP with private IP address",
                                "toolTip": "If checked, expose application with private IP address.",
                                "visible": false
                            },
                            {
                                "name": "keyVaultText00",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "Choose an option for providing the TLS/SSL certificate:"
                                }
                            },
                            {
                                "name": "keyVaultText01",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "    ⁃ Upload a TLS/SSL certificate: Upload the pre-signed certificate now."
                                }
                            },
                            {
                                "name": "keyVaultText02",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "    ⁃ Identify an Azure Key Vault: The Key Vault must already contain the certificate and its password stored as secrets."
                                }
                            },
                            {
                                "name": "keyVaultText03",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "    ⁃ Generate a self-signed front-end certificate: Generate a self-signed front-end certificate and apply it during deployment."
                                }
                            },
                            {
                                "name": "certificateOption",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Select a TLS/SSL certificate option",
                                "defaultValue": "Generate a self-signed front-end certificate",
                                "toolTip": "Select a TLS/SSL certificate option",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Upload a TLS/SSL certificate",
                                            "value": "haveCert"
                                        },
                                        {
                                            "label": "Identify an Azure Key Vault",
                                            "value": "haveKeyVault"
                                        },
                                        {
                                            "label": "Generate a self-signed front-end certificate",
                                            "value": "generateCert"
                                        }
                                    ],
                                    "required": true
                                },
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            },
                            {
                                "name": "keyVaultSSLCertData",
                                "type": "Microsoft.Common.FileUpload",
                                "label": "Front-End TLS/SSL certificate(.pfx)",
                                "toolTip": "TLS/SSL certificate used for App Gateway",
                                "constraints": {
                                    "required": true,
                                    "accept": ".pfx"
                                },
                                "options": {
                                    "multiple": false,
                                    "uploadMode": "file",
                                    "openMode": "binary"
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveCert')]"
                            },
                            {
                                "name": "appGatewaySSLCertPassword",
                                "type": "Microsoft.Common.PasswordBox",
                                "label": {
                                    "password": "Password",
                                    "confirmPassword": "Confirm password"
                                },
                                "toolTip": "Front-End TLS/SSL certificate password",
                                "constraints": {
                                    "required": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveCert')]"
                                },
                                "options": {
                                    "hideConfirmation": false
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveCert')]"
                            },
                            {
                                "name": "keyVaultResourceGroup",
                                "type": "Microsoft.Common.TextBox",
                                "label": "Resource group name in current subscription containing the Key Vault",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^[a-z0-9A-Z.\\-_()]{0,89}([a-z0-9A-Z\\-_()]{1}){3,63}$",
                                    "validationMessage": "[if(greater(length(steps('section_appGateway').appgwIngress.keyVaultResourceGroup), 90),'Resource group names only allow up to 90 characters.', 'Resource group names only allow alphanumeric characters, periods, underscores, hyphens and parenthesis and cannot end in a period.')]"
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "keyVaultName",
                                "type": "Microsoft.Common.TextBox",
                                "label": "Name of the Azure Key Vault containing secrets for the certificate for TLS/SSL Termination",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^(?=.{3,24}$)[a-zA-Z](?!.*--)[a-zA-Z0-9-]*[a-zA-Z0-9]$",
                                    "validationMessage": "[if(or(greater(length(steps('section_appGateway').appgwIngress.keyVaultName), 24), less(length(steps('section_appGateway').appgwIngress.keyVaultName), 3)),'Vault name must be between 3-24 alphanumeric characters. The name must begin with a letter, end with a letter or digit, and not contain consecutive hyphens.','Vault name must only contain alphanumeric characters and dashes and cannot start with a number')]"
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "keyVaultSSLCertDataSecretName",
                                "type": "Microsoft.Common.TextBox",
                                "label": "The name of the secret in the specified Key Vault whose value is the front-end TLS/SSL certificate data",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^[a-z0-9A-Z]{1,30}$",
                                    "validationMessage": "The value must be 1-30 characters long and must only contain letters and numbers."
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "keyVaultSSLCertPasswordSecretName",
                                "type": "Microsoft.Common.TextBox",
                                "label": "The name of the secret in the specified Key Vault whose value is the password for the front-end TLS/SSL certificate",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^[a-z0-9A-Z]{1,30}$",
                                    "validationMessage": "The value must be 1-30 characters long and must only contain letters and numbers."
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "enableCookieBasedAffinity",
                                "type": "Microsoft.Common.CheckBox",
                                "label": "Enable cookie based affinity",
                                "toolTip": "If checked, enable cookie based affinity",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            }
                        ],
                        "visible": true
                    }
                ]
            },
            {
                "name": "Application",
                "label": "Operator and application",
                "subLabel": {
                    "preValidation": "Provide required info for Operator and application",
                    "postValidation": "Done"
                },
                "bladeTitle": "Operator and application",
                "elements": [
                    {
                        "name": "deployWLO",
                        "type": "Microsoft.Common.OptionsGroup",
                        "label": "IBM supported?",
                        "defaultValue": "No",
                        "toolTip": "Select 'Yes' if your deployments are to be supported under existing WebSphere entitlements (this includes supported deployments of Open Liberty). Select 'Yes' if you are deploying WebSphere Liberty under the Trial license terms. Select 'No' if you are deploying Open Liberty unsupported.",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "Yes",
                                    "value": "true"
                                },
                                {
                                    "label": "No",
                                    "value": "false"
                                }
                            ],
                            "required": true
                        }
                    },
                    {
                        "name": "deployApplication",
                        "type": "Microsoft.Common.OptionsGroup",
                        "label": "Deploy an application?",
                        "defaultValue": "No",
                        "toolTip": "Select 'Yes' to deploy an application, or select 'No' if you prefer to manually deploy application later.",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "Yes",
                                    "value": "true"
                                },
                                {
                                    "label": "No",
                                    "value": "false"
                                }
                            ],
                            "required": true
                        }
                    },
                    {
                        "name": "licenseInfo",
                        "type": "Microsoft.Common.InfoBox",
                        "options": {
                            "icon": "Info",
                            "text": "I accept the terms on the license agreement corresponding to the version of IBM Program in the application container<br>by setting this value to true. See <a href='https://ibm.biz/was-license' target='_blank'>https://ibm.biz/was-license</a> for the license agreement applicable to this IBM Program.<br>You must accept the license for the installation to work."
                        },
                        "visible": "[and(bool(steps('Application').deployWLO), bool(steps('Application').deployApplication))]"
                    },
                    {
                        "name": "acceptIBMLicenseAgreement",
                        "type": "Microsoft.Common.CheckBox",
                        "label": "Accept license",
                        "toolTip": "Select to accept the License Agreement.",
                        "constraints": {
                            "required": true,
                            "validationMessage": "The deployment will not proceed unless you accept the License Agreement."
                        },
                        "visible": "[and(bool(steps('Application').deployWLO), bool(steps('Application').deployApplication))]"
                    },
                    {
                        "name": "edition",
                        "type": "Microsoft.Common.OptionsGroup",
                        "defaultValue": "IBM WebSphere Application Server",
                        "label": "Edition",
                        "toolTip": "Product edition",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "IBM WebSphere Application Server",
                                    "value": "IBM WebSphere Application Server"
                                },
                                {
                                    "label": "IBM WebSphere Application Server Liberty Core",
                                    "value": "IBM WebSphere Application Server Liberty Core"
                                },
                                {
                                    "label": "IBM WebSphere Application Server Network Deployment",
                                    "value": "IBM WebSphere Application Server Network Deployment"
                                }
                            ],
                            "required": true
                        },
                        "visible": "[and(bool(steps('Application').deployWLO), bool(steps('Application').deployApplication))]"
                    },
                    {
                        "name": "productEntitlementSource",
                        "type": "Microsoft.Common.OptionsGroup",
                        "defaultValue": "Standalone",
                        "label": "Product entitlement source",
                        "toolTip": "Entitlement source for the product",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "Standalone",
                                    "value": "Standalone"
                                },
                                {
                                    "label": "IBM WebSphere Hybrid Edition",
                                    "value": "IBM WebSphere Hybrid Edition"
                                },
                                {
                                    "label": "IBM Cloud Pak for Applications",
                                    "value": "IBM Cloud Pak for Applications"
                                },
                                {
                                    "label": "IBM WebSphere Application Server Family Edition",
                                    "value": "IBM WebSphere Application Server Family Edition"
                                }
                            ],
                            "required": true
                        },
                        "visible": "[and(bool(steps('Application').deployWLO), bool(steps('Application').deployApplication))]"
                    },
                    {
                        "name": "appImageInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Provide application deployment information",
                        "elements": [
                            {
                                "name": "appImageOption",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Deploy your own application or a sample application?",
                                "defaultValue": "Your own application image",
                                "toolTip": "Depoly an application image on top of Open Liberty or WebSphere Liberty base image.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Your own application image",
                                            "value": "1"
                                        },
                                        {
                                            "label": "The Open Liberty sample image: icr.io/appcafe/open-liberty/samples/getting-started (details on sample application here: https://github.com/OpenLiberty/sample-getting-started)",
                                            "value": "2"
                                        }
                                    ],
                                    "required": true
                                }
                            },
                            {
                                "name": "imagePathInfo",
                                "type": "Microsoft.Common.InfoBox",
                                "options": {
                                    "icon": "Info",
                                    "text": "The image you provide must satisfy one of the following conditions:<br> <li>A public image which is accessible without credentials. If you input a fully qualified container image path<br>containing the registry login server, it's used directly. Otherwise, the login server is assumed to be 'docker.io'.<br>For example, 'websphere-liberty' will be converted to 'docker.io/library/websphere-liberty',<br>and 'ibmcom/websphere-liberty' will be converted to 'docker.io/ibmcom/websphere-liberty'.</li><li>A pre-built image stored in the Azure Container Registry you specified in the <b>AKS</b> tab.</li>"
                                },
                                "visible": "[equals(steps('Application').appImageInfo.appImageOption, '1')]"
                            },
                            {
                                "name": "appImagePath",
                                "type": "Microsoft.Common.TextBox",
                                "label": "Application container image path",
                                "placeholder": "Example: docker.io/openliberty/open-liberty:full-java11-openj9-ubi",
                                "toolTip": "Specify the container image path of your application.",
                                "constraints": {
                                    "required": true,
                                    "regex": "^(?:(?=[^:\/]{4,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$",
                                    "validationMessage": "The value must be a valid container image path. For example, docker.io/openliberty/open-liberty:full-java11-openj9-ubi"
                                },
                                "visible": "[equals(steps('Application').appImageInfo.appImageOption, '1')]"
                            }
                        ],
                        "visible": "[bool(steps('Application').deployApplication)]"
                    },
                    {
                        "name": "autoScaling",
                        "type": "Microsoft.Common.OptionsGroup",
                        "label": "Auto-scale replicas?",
                        "defaultValue": "No",
                        "toolTip": "Select 'Yes' to automatically create or delete instances based on resource consumption, or select 'No' to specify static instances.",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "Yes",
                                    "value": "true"
                                },
                                {
                                    "label": "No",
                                    "value": "false"
                                }
                            ],
                            "required": true 
                        },
                        "visible": "[bool(steps('Application').deployApplication)]"
                    },
                    {
                        "name": "cpuUtilizationPercentage",
                        "type": "Microsoft.Common.Slider",
                        "min": 1,
                        "max": 100,
                        "label": "Target average CPU utilization",
                        "subLabel": "percentage",
                        "defaultValue": 80,
                        "showStepMarkers": false,
                        "toolTip": "Set the target average CPU utilization (percentage) over all the replicas.",
                        "constraints": {
                            "required": true
                        },
                        "visible": "[and(bool(steps('Application').deployApplication), bool(steps('Application').autoScaling))]"
                    },
                    {
                        "name": "minReplicas",
                        "type": "Microsoft.Common.Slider",
                        "min": 1,
                        "max": "[int(steps('Application').maxReplicas)]",
                        "label": "Minimum application replicas",
                        "defaultValue": 1,
                        "showStepMarkers": false,
                        "toolTip": "Set the minimum number of application replicas.",
                        "constraints": {
                            "required": true
                        },
                        "visible": "[and(bool(steps('Application').deployApplication), bool(steps('Application').autoScaling))]"
                    },
                    {
                        "name": "maxReplicas",
                        "type": "Microsoft.Common.Slider",
                        "min": "[int(steps('Application').minReplicas)]",
                        "max": 100,
                        "label": "Maximum application replicas",
                        "showStepMarkers": false,
                        "toolTip": "Set the maximum number of application replicas.",
                        "constraints": {
                            "required": true
                        },
                        "visible": "[and(bool(steps('Application').deployApplication), bool(steps('Application').autoScaling))]"
                    },
                    {
                        "name": "requestCPUMillicore",
                        "type": "Microsoft.Common.TextBox",
                        "label": "Minimum required CPU core (millicore)",
                        "showStepMarkers": false,
                        "toolTip": "Set the minimum required CPU core (millicore) over all the replicas.",
                        "constraints": {
                            "required": true,
                            "validations": [
                                {
                                  "regex": "^[1-9][0-9]*$",
                                  "message": "Only positive numbers are allowed."
                                }
                              ]
                        },
                        "visible": "[and(bool(steps('Application').deployApplication), bool(steps('Application').autoScaling))]"
                    },
                    {
                        "name": "appReplicas",
                        "type": "Microsoft.Common.Slider",
                        "min": 1,
                        "max": 20,
                        "label": "Number of application replicas",
                        "defaultValue": 2,
                        "showStepMarkers": false,
                        "toolTip": "The number of application replicas to deploy.",
                        "constraints": {
                            "required": true
                        },
                        "visible": "[and(bool(steps('Application').deployApplication), not(bool(steps('Application').autoScaling)))]"
                    }
                ]
            }
        ],
        "outputs": {
            "location": "[location()]",
            "createCluster": "[bool(steps('Cluster').clusterInfo.createCluster)]",
            "vmSize": "[steps('Cluster').clusterInfo.vmSizeSelect]",
            "minCount": "[int(steps('Cluster').clusterInfo.minCount)]",
            "maxCount": "[int(steps('Cluster').clusterInfo.maxCount)]",
            "clusterName": "[last(split(steps('Cluster').clusterInfo.clusterSelector.id, '/'))]",
            "clusterRGName": "[last(take(split(steps('Cluster').clusterInfo.clusterSelector.id, '/'), 5))]",
            "createACR": "[bool(steps('Cluster').acrInfo.createACR)]",
            "acrName": "[last(split(steps('Cluster').acrInfo.acrSelector.id, '/'))]",
            "acrRGName": "[last(take(split(steps('Cluster').acrInfo.acrSelector.id, '/'), 5))]",
            "enableAppGWIngress": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
            "vnetForApplicationGateway": "[steps('section_appGateway').appgwIngress.vnetForApplicationGateway]",
            "newOrExistingVnetForApplicationGateway": "[steps('section_appGateway').appgwIngress.vnetForApplicationGateway.newOrExisting]",
            "vnetRGNameForApplicationGateway": "[steps('section_appGateway').appgwIngress.vnetForApplicationGateway.resourceGroup]",
            "appgwUsePrivateIP": "[steps('section_appGateway').appgwIngress.appgwUsePrivateIP]",
            "appGatewayCertificateOption": "[steps('section_appGateway').appgwIngress.certificateOption]",
            "appGatewaySSLCertData": "[steps('section_appGateway').appgwIngress.keyVaultSSLCertData]",
            "appGatewaySSLCertPassword": "[steps('section_appGateway').appgwIngress.appGatewaySSLCertPassword]",
            "keyVaultResourceGroup": "[steps('section_appGateway').appgwIngress.keyVaultResourceGroup]",
            "keyVaultName": "[steps('section_appGateway').appgwIngress.keyVaultName]",
            "keyVaultSSLCertDataSecretName": "[steps('section_appGateway').appgwIngress.keyVaultSSLCertDataSecretName]",
            "keyVaultSSLCertPasswordSecretName": "[steps('section_appGateway').appgwIngress.keyVaultSSLCertPasswordSecretName]",
            "enableCookieBasedAffinity": "[bool(steps('section_appGateway').appgwIngress.enableCookieBasedAffinity)]",
            "deployWLO": "[bool(steps('Application').deployWLO)]",
            "edition": "[steps('Application').edition]",
            "productEntitlementSource": "[steps('Application').productEntitlementSource]",
            "deployApplication": "[bool(steps('Application').deployApplication)]",
            "appImagePath": "[if(equals(steps('Application').appImageInfo.appImageOption, '2'), 'icr.io/appcafe/open-liberty/samples/getting-started', if(equals(steps('Application').appImageInfo.appImageOption, '3'), 'docker.io/ibmcom/websphere-liberty-sample:1.0.0', steps('Application').appImageInfo.appImagePath))]",
            "autoScaling": "[bool(steps('Application').autoScaling)]",
            "cpuUtilizationPercentage": "[int(steps('Application').cpuUtilizationPercentage)]",
            "minReplicas": "[int(steps('Application').minReplicas)]",
            "maxReplicas": "[int(steps('Application').maxReplicas)]",
            "requestCPUMillicore": "[int(steps('Application').requestCPUMillicore)]",
            "appReplicas": "[int(steps('Application').appReplicas)]"
        }
    }
}
