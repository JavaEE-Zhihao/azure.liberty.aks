{
    "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
    "handler": "Microsoft.Azure.CreateUIDef",
    "version": "0.1.2-preview",
    "parameters": {
        "basics": [
            {
                "name": "errInfo",
                "type": "Microsoft.Common.InfoBox",
                "visible": "[not(equals(length(basics('identity').userAssignedIdentities), 1))]",
                "options": {
                    "icon": "Error",
                    "text": "<b>The deployment will fail unless the roles specified here are assigned to the user-assigned managed identity.</b><br><br>Select <b>only one</b> user-assigned managed identity that has (1) an <b>Owner</b> role in the subscription, and (2) a <b>Directory readers</b> role in Azure AD.<br><br>You can find more details from the following articles:<li><a href='https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-manage-user-assigned-managed-identities?pivots=identity-mi-methods-azp#create-a-user-assigned-managed-identity' target='_blank'>Create a user-assigned managed identity</a></li><li><a href='https://docs.microsoft.com/azure/role-based-access-control/role-assignments-portal-managed-identity#user-assigned-managed-identity' target='_blank'>Assign a role to a user-assigned managed identity</a></li><li><a href='https://docs.microsoft.com/azure/active-directory/roles/manage-roles-portal#assign-a-role' target='_blank'>Assign Azure AD roles to a user-assigned managed identity</a></li>"
                }
            },
            {
                "name": "identity",
                "type": "Microsoft.ManagedIdentity.IdentitySelector",
                "label": "Managed Identity Configuration",
                "toolTip": {
                    "userAssignedIdentity": "Add a user-assigned managed identity that has (1) an <b>Owner</b> role in the subscription, and (2) a <b>Directory readers</b> role in Azure AD to enable the application deployment."
                },
                "defaultValue": {
                    "systemAssignedIdentity": "Off"
                },
                "options": {
                    "hideSystemAssignedIdentity": true,
                    "hideUserAssignedIdentity": false
                }
            },
            {
                "name": "howToReportIssues",
                "type": "Microsoft.Common.Section",
                "label": "Report issues, get help, and share feedback",
                "elements": [
                    {
                        "name": "howToReportIssueText",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you encounter problems during deployment of Liberty on Azure, open an issue.",
                            "link": {
                                "label": "Issue tracker",
                                "uri": "https://aka.ms/azure-liberty-aks-issues?version=${project.version}"
                            }
                        }
                    },
                    {
                        "name": "howToReportVendorIssueText",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you have problems with the offer after successful deployment, and you have purchased licenses that entitle you to IBM support for Liberty, open an issue.",
                            "link": {
                                "label": "IBM support",
                                "uri": "https://www.ibm.com/mysupport/"
                            }
                        }
                    },
                    {
                        "name": "howToCommunityHelp",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you want to interact directly with the Open Liberty community, check out the community options.",
                            "link": {
                                "label": "Community support",
                                "uri": "https://openliberty.io/support/"
                            }
                        }
                    },
                    {
                        "name": "howToStackOverflow",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "If you want to ask questions about WebSphere Liberty, please use the IBM support option or ask on StackOverflow.",
                            "link": {
                                "label": "StackOverflow",
                                "uri": "https://stackoverflow.com/questions/tagged/websphere-liberty"
                            }
                        }
                    },
                    {
                        "name": "survey",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "To get free help with Azure migration from the development team, fill out this survey.",
                            "link": {
                                "label": "Take survey",
                                "uri": "https://aka.ms/ibm-stack-migration-survey"
                            }
                        }
                    }
                ],
                "visible": true
            }
        ],
        "steps": [
            {
                "name": "Cluster",
                "label": "Configure cluster",
                "subLabel": {
                    "preValidation": "Provide required info for cluster configuration",
                    "postValidation": "Done"
                },
                "bladeTitle": "Configure cluster",
                "elements": [
                    {
                        "name": "clusterInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Azure Kubernetes Service (AKS)",
                        "elements": [
                            {
                                "name": "createCluster",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Create a new cluster?",
                                "defaultValue": "Yes",
                                "toolTip": "Select 'Yes' to create a new cluster, or select 'No' to provide an existing cluster.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Yes",
                                            "value": "true"
                                        },
                                        {
                                            "label": "No",
                                            "value": "false"
                                        }
                                    ],
                                    "required": true
                                }
                            },
                            {
                                "name": "vmSizeSelect",
                                "type": "Microsoft.Compute.SizeSelector",
                                "label": "VM size",
                                "toolTip": "The size of the virtual machines for the nodes in the cluster. This cannot be changed after creating the cluster.",
                                "recommendedSizes": [
                                    "Standard_DS2_v2"
                                ],
                                "osPlatform": "Linux",
                                "count": "[int(steps('Cluster').clusterInfo.minCount)]",
                                "visible": "[bool(steps('Cluster').clusterInfo.createCluster)]"
                            },
                            {
                                "name": "minCount",
                                "type": "Microsoft.Common.Slider",
                                "min": 1,
                                "max": "[int(steps('Cluster').clusterInfo.maxCount)]",
                                "label": "Minimum node count",
                                "defaultValue": 1,
                                "showStepMarkers": false,
                                "toolTip": "Set the minimum node count for the cluster.",
                                "constraints": {
                                    "required": true
                                },
                                "visible": "[bool(steps('Cluster').clusterInfo.createCluster)]"
                            },
                            {
                                "name": "maxCount",
                                "type": "Microsoft.Common.Slider",
                                "min": "[int(steps('Cluster').clusterInfo.minCount)]",
                                "max": 100,
                                "label": "Maximum node count",
                                "defaultValue": 5,
                                "showStepMarkers": false,
                                "toolTip": "Set the maximum node count for the cluster.",
                                "constraints": {
                                    "required": true
                                },
                                "visible": "[bool(steps('Cluster').clusterInfo.createCluster)]"
                            },
                            {
                                "name": "clusterSelector",
                                "type": "Microsoft.Solutions.ResourceSelector",
                                "label": "Select cluster",
                                "toolTip": "Select the existing cluster.",
                                "resourceType": "Microsoft.ContainerService/managedClusters",
                                "options": {
                                    "filter": {
                                        "subscription": "onBasics",
                                        "location": "onBasics"
                                    }
                                },
                                "visible": "[not(bool(steps('Cluster').clusterInfo.createCluster))]"
                            }
                        ]
                    },
                    {
                        "name": "acrInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Azure Container Registry (ACR)",
                        "elements": [
                            {
                                "name": "createACR",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Create a new ACR instance?",
                                "defaultValue": "Yes",
                                "toolTip": "Select 'Yes' to create a new ACR instance, or select 'No' to provide an existing ACR instance.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Yes",
                                            "value": "true"
                                        },
                                        {
                                            "label": "No",
                                            "value": "false"
                                        }
                                    ],
                                    "required": true
                                }
                            },
                            {
                                "name": "enableAcrAdminInfo",
                                "type": "Microsoft.Common.InfoBox",
                                "options": {
                                    "icon": "Info",
                                    "text": "Make sure the Azure Container Registry has enabled admin user.",
                                    "uri": "https://docs.microsoft.com/en-us/azure/container-registry/container-registry-authentication#admin-account"
                                },
                                "visible": "[not(bool(steps('Cluster').acrInfo.createACR))]"
                            },
                            {
                                "name": "acrSelector",
                                "type": "Microsoft.Solutions.ResourceSelector",
                                "label": "Select ACR instance",
                                "toolTip": "Select the existing ACR instance.",
                                "resourceType": "Microsoft.ContainerRegistry/registries",
                                "options": {
                                    "filter": {
                                        "subscription": "onBasics",
                                        "location": "onBasics"
                                    }
                                },
                                "visible": "[not(bool(steps('Cluster').acrInfo.createACR))]"
                            }
                        ]
                    }
                ]
            },
            {
                "name": "section_appGateway",
                "label": "Networking",
                "subLabel": {
                    "preValidation": "Provide required information for networking",
                    "postValidation": "Done"
                },
                "bladeTitle": "Networking",
                "elements": [
                    {
                        "name": "appgwIngress",
                        "type": "Microsoft.Common.Section",
                        "label": "Application Gateway Ingress Controller",
                        "elements": [
                            {
                                "name": "enableAppGatewayText",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": true,
                                "options": {
                                    "text": "Select 'Yes' to configure an Application Gateway Ingress Controller",
                                    "link": {
                                        "label": "Learn more",
                                        "uri": "https://aka.ms/azure-liberty-aks-app-gateway-ingress-controller"
                                    }
                                }
                            },
                            {
                                "name": "enableAppGateway",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Connect to Azure Application Gateway?",
                                "defaultValue": "No",
                                "toolTip": "Select 'Yes' to create an Azure Application Gateway Ingress as the load balancer for the cluster.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Yes",
                                            "value": true
                                        },
                                        {
                                            "label": "No",
                                            "value": false
                                        }
                                    ],
                                    "required": false
                                }
                            },
                            {
                                "name": "vnetForApplicationGateway",
                                "type": "Microsoft.Network.VirtualNetworkCombo",
                                "label": {
                                    "virtualNetwork": "Virtual network",
                                    "subnets": "Subnets"
                                },
                                "toolTip": {
                                    "virtualNetwork": "Select a virtual network in which to place the Application Gateway.",
                                    "subnets": "The subnet must be dedicated only for use by the Application Gateway."
                                },
                                "defaultValue": {
                                    "name": "[concat('olaks-vnet',take(guid(), 8))]",
                                    "addressPrefixSize": "/24"
                                },
                                "constraints": {
                                    "minAddressPrefixSize": "/24"
                                },
                                "options": {
                                    "hideExisting": false
                                },
                                "subnets": {
                                    "gatewaySubnet": {
                                        "label": "Subnet",
                                        "defaultValue": {
                                            "name": "ol-aks-gateway-subnet",
                                            "addressPrefixSize": "/24"
                                        },
                                        "constraints": {
                                            "minAddressPrefixSize": "/24",
                                            "minAddressCount": 38,
                                            "requireContiguousAddresses": false
                                        }
                                    }
                                },
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            },
                            {
                                "name": "appgwUsePrivateIP",
                                "type": "Microsoft.Common.CheckBox",
                                "label": "Configure frontend IP with private IP address",
                                "toolTip": "If checked, expose WebLogic Server with private IP address.",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            },
                            {
                                "name": "keyVaultText00",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "Choose an option for providing the TLS/SSL certificate:"
                                }
                            },
                            {
                                "name": "keyVaultText01",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "    ⁃ Upload a TLS/SSL certificate: Upload the pre-signed certificate now."
                                }
                            },
                            {
                                "name": "keyVaultText02",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "    ⁃ Identify an Azure Key Vault: The Key Vault must already contain the certificate and its password stored as secrets."
                                }
                            },
                            {
                                "name": "keyVaultText03",
                                "type": "Microsoft.Common.TextBlock",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "text": "    ⁃ Generate a self-signed front-end certificate: Generate a self-signed front-end certificate and apply it during deployment."
                                }
                            },
                            {
                                "name": "certificateOption",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Select a TLS/SSL certificate option",
                                "defaultValue": "Generate a self-signed front-end certificate",
                                "toolTip": "Select a TLS/SSL certificate option",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Upload a TLS/SSL certificate",
                                            "value": "haveCert"
                                        },
                                        {
                                            "label": "Identify an Azure Key Vault",
                                            "value": "haveKeyVault"
                                        },
                                        {
                                            "label": "Generate a self-signed front-end certificate",
                                            "value": "generateCert"
                                        }
                                    ],
                                    "required": true
                                },
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            },
                            {
                                "name": "keyVaultSSLCertData",
                                "type": "Microsoft.Common.FileUpload",
                                "label": "Front-End TLS/SSL certificate(.pfx)",
                                "toolTip": "TLS/SSL certificate used for App Gateway",
                                "constraints": {
                                    "required": true,
                                    "accept": ".pfx"
                                },
                                "options": {
                                    "multiple": false,
                                    "uploadMode": "file",
                                    "openMode": "binary"
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveCert')]"
                            },
                            {
                                "name": "appGatewaySSLCertPassword",
                                "type": "Microsoft.Common.PasswordBox",
                                "label": {
                                    "password": "Password",
                                    "confirmPassword": "Confirm password"
                                },
                                "toolTip": "Front-End TLS/SSL certificate password",
                                "constraints": {
                                    "required": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveCert')]",
                                    "regex": "^((?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])).{6,128}$",
                                    "validationMessage": "The password must contain at least 6 characters, with at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character."
                                },
                                "options": {
                                    "hideConfirmation": false
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveCert')]"
                            },
                            {
                                "name": "keyVaultResourceGroup",
                                "type": "Microsoft.Common.TextBox",
                                "label": "Resource group name in current subscription containing the Key Vault",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^[a-z0-9A-Z.\\-_()]{0,89}([a-z0-9A-Z\\-_()]{1}){3,63}$",
                                    "validationMessage": "[if(greater(length(steps('section_appGateway').appgwIngress.keyVaultResourceGroup), 90),'Resource group names only allow up to 90 characters.', 'Resource group names only allow alphanumeric characters, periods, underscores, hyphens and parenthesis and cannot end in a period.')]"
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "keyVaultName",
                                "type": "Microsoft.Common.TextBox",
                                "label": "Name of the Azure Key Vault containing secrets for the certificate for TLS/SSL Termination",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^(?=.{3,24}$)[a-zA-Z](?!.*--)[a-zA-Z0-9-]*[a-zA-Z0-9]$",
                                    "validationMessage": "[if(or(greater(length(steps('section_appGateway').appgwIngress.keyVaultName), 24), less(length(steps('section_appGateway').appgwIngress.keyVaultName), 3)),'Vault name must be between 3-24 alphanumeric characters. The name must begin with a letter, end with a letter or digit, and not contain consecutive hyphens.','Vault name must only contain alphanumeric characters and dashes and cannot start with a number')]"
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "keyVaultSSLCertDataSecretName",
                                "type": "Microsoft.Common.TextBox",
                                "label": "The name of the secret in the specified Key Vault whose value is the front-end TLS/SSL certificate data",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^[a-z0-9A-Z]{1,30}$",
                                    "validationMessage": "The value must be 1-30 characters long and must only contain letters and numbers."
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "keyVaultSSLCertPasswordSecretName",
                                "type": "Microsoft.Common.TextBox",
                                "label": "The name of the secret in the specified Key Vault whose value is the password for the front-end TLS/SSL certificate",
                                "defaultValue": "",
                                "toolTip": "Use only letters and numbers",
                                "constraints": {
                                    "required": true,
                                    "regex": "^[a-z0-9A-Z]{1,30}$",
                                    "validationMessage": "The value must be 1-30 characters long and must only contain letters and numbers."
                                },
                                "visible": "[equals(steps('section_appGateway').appgwIngress.certificateOption, 'haveKeyVault')]"
                            },
                            {
                                "name": "agicSpInfo",
                                "type": "Microsoft.Common.InfoBox",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
                                "options": {
                                    "icon": "Info",
                                    "text": "You must input an Active Directory Service Principal that is encoded with base64 to create the Application Gateway Ingress Controller. See this <a href=https://aka.ms/azure-liberty-aks-agic-sp-doc target='_blank'>document</a> for more information.</br>You can generate one with command <b>az ad sp create-for-rbac --sdk-auth --role Contributor --scopes /subscriptions/&lt;AZURE_SUBSCRIPTION_ID&gt; | base64 -w0</b>. On macOS omit the <b>-w0</b>."
                                }
                            },
                            {
                                "name": "servicePrincipal",
                                "type": "Microsoft.Common.PasswordBox",
                                "label": {
                                    "password": "Service principal",
                                    "confirmPassword": "Confirm service principal"
                                },
                                "toolTip": "Base64 encoded JSON blob of the service principal. You can generate one with command 'az ad sp create-for-rbac --sdk-auth --role Contributor --scopes /subscriptions/&lt;AZURE_SUBSCRIPTION_ID&gt; | base64 -w0' On macOS omit the -w0.",
                                "constraints": {
                                    "required": true
                                },
                                "options": {
                                    "hideConfirmation": false
                                },
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            },
                            {
                                "name": "enableCookieBasedAffinity",
                                "type": "Microsoft.Common.CheckBox",
                                "label": "Enable cookie based affinity",
                                "toolTip": "If checked, enable cookie based affinity",
                                "visible": "[steps('section_appGateway').appgwIngress.enableAppGateway]"
                            }
                        ],
                        "visible": true
                    }
                ]
            },
            {
                "name": "Application",
                "label": "Configure application",
                "subLabel": {
                    "preValidation": "Provide required info for application",
                    "postValidation": "Done"
                },
                "bladeTitle": "Configure application",
                "elements": [
                    {
                        "name": "deployApplication",
                        "type": "Microsoft.Common.OptionsGroup",
                        "label": "Deploy an application?",
                        "defaultValue": "No",
                        "toolTip": "Select 'Yes' to deploy an application, or select 'No' if you prefer to manually deploy application later.",
                        "constraints": {
                            "allowedValues": [
                                {
                                    "label": "Yes",
                                    "value": "true"
                                },
                                {
                                    "label": "No",
                                    "value": "false"
                                }
                            ],
                            "required": true
                        }
                    },
                    {
                        "name": "appImageInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Provide application deployment information",
                        "elements": [
                            {
                                "name": "appImageOption",
                                "type": "Microsoft.Common.OptionsGroup",
                                "label": "Deploy your own application or a sample application?",
                                "defaultValue": "Your own application image",
                                "toolTip": "Depoly an application image on top of Open Liberty or WebSphere Liberty base image.",
                                "constraints": {
                                    "allowedValues": [
                                        {
                                            "label": "Your own application image",
                                            "value": "1"
                                        },
                                        {
                                            "label": "The Open Liberty sample image: icr.io/appcafe/open-liberty/samples/getting-started (details on sample application here: https://github.com/OpenLiberty/sample-getting-started)",
                                            "value": "2"
                                        }
                                    ],
                                    "required": true
                                }
                            },
                            {
                                "name": "imagePathInfo",
                                "type": "Microsoft.Common.InfoBox",
                                "options": {
                                    "icon": "Info",
                                    "text": "Please provide a public image which is accessible without credentials. If you input a fully qualified container image path containing the registry login server, it's used directly. Otherwise, the login server is assumed to be 'docker.io'. For example, 'websphere-liberty' will be converted to 'docker.io/library/websphere-liberty', and 'ibmcom/websphere-liberty' will be converted to 'docker.io/ibmcom/websphere-liberty'."
                                },
                                "visible": "[equals(steps('Application').appImageInfo.appImageOption, '1')]"
                            },
                            {
                                "name": "appImagePath",
                                "type": "Microsoft.Common.TextBox",
                                "label": "Application container image path",
                                "placeholder": "Example: docker.io/openliberty/open-liberty:full-java11-openj9-ubi",
                                "toolTip": "Specify the container image path of your application.",
                                "constraints": {
                                    "required": true,
                                    "regex": "^(?:(?=[^:\/]{4,253})(?!-)[a-zA-Z0-9-]{1,63}(?<!-)(?:\\.(?!-)[a-zA-Z0-9-]{1,63}(?<!-))*(?::[0-9]{1,5})?/)?((?![._-])(?:[a-z0-9._-]*)(?<![._-])(?:/(?![._-])[a-z0-9._-]*(?<![._-]))*)(?::(?![.-])[a-zA-Z0-9_.-]{1,128})?$",
                                    "validationMessage": "The value must be a valid container image path. For example, docker.io/openliberty/open-liberty:full-java11-openj9-ubi"
                                },
                                "visible": "[equals(steps('Application').appImageInfo.appImageOption, '1')]"
                            }
                        ],
                        "visible": "[bool(steps('Application').deployApplication)]"
                    },
                    {
                        "name": "appLoadBalancingInfo",
                        "type": "Microsoft.Common.Section",
                        "label": "Load balancing",
                        "elements": [
                            {
                                "name": "appReplicas",
                                "type": "Microsoft.Common.Slider",
                                "min": 1,
                                "max": 20,
                                "label": "Number of application replicas",
                                "defaultValue": 2,
                                "showStepMarkers": false,
                                "toolTip": "The number of application replicas to deploy.",
                                "constraints": {
                                    "required": true
                                }
                            }
                        ],
                        "visible": "[bool(steps('Application').deployApplication)]"
                    }
                ]
            }
        ],
        "outputs": {
            "location": "[location()]",
            "identity": "[basics('identity')]",
            "createCluster": "[bool(steps('Cluster').clusterInfo.createCluster)]",
            "vmSize": "[steps('Cluster').clusterInfo.vmSizeSelect]",
            "minCount": "[int(steps('Cluster').clusterInfo.minCount)]",
            "maxCount": "[int(steps('Cluster').clusterInfo.maxCount)]",
            "clusterName": "[last(split(steps('Cluster').clusterInfo.clusterSelector.id, '/'))]",
            "clusterRGName": "[last(take(split(steps('Cluster').clusterInfo.clusterSelector.id, '/'), 5))]",
            "createACR": "[bool(steps('Cluster').acrInfo.createACR)]",
            "acrName": "[last(split(steps('Cluster').acrInfo.acrSelector.id, '/'))]",
            "enableAppGWIngress": "[steps('section_appGateway').appgwIngress.enableAppGateway]",
            "vnetForApplicationGateway": "[steps('section_appGateway').appgwIngress.vnetForApplicationGateway]",
            "newOrExistingVnetForApplicationGateway": "[steps('section_appGateway').appgwIngress.vnetForApplicationGateway.newOrExisting]",
            "vnetRGNameForApplicationGateway": "[steps('section_appGateway').appgwIngress.vnetForApplicationGateway.resourceGroup]",
            "appgwUsePrivateIP": "[steps('section_appGateway').appgwIngress.appgwUsePrivateIP]",
            "appGatewayCertificateOption": "[steps('section_appGateway').appgwIngress.certificateOption]",
            "appGatewaySSLCertData": "[steps('section_appGateway').appgwIngress.keyVaultSSLCertData]",
            "appGatewaySSLCertPassword": "[steps('section_appGateway').appgwIngress.appGatewaySSLCertPassword]",
            "keyVaultResourceGroup": "[steps('section_appGateway').appgwIngress.keyVaultResourceGroup]",
            "keyVaultName": "[steps('section_appGateway').appgwIngress.keyVaultName]",
            "keyVaultSSLCertDataSecretName": "[steps('section_appGateway').appgwIngress.keyVaultSSLCertDataSecretName]",
            "keyVaultSSLCertPasswordSecretName": "[steps('section_appGateway').appgwIngress.keyVaultSSLCertPasswordSecretName]",
            "servicePrincipal": "[steps('section_appGateway').appgwIngress.servicePrincipal]",
            "enableCookieBasedAffinity": "[bool(steps('section_appGateway').appgwIngress.enableCookieBasedAffinity)]",
            "deployApplication": "[bool(steps('Application').deployApplication)]",
            "appImagePath": "[if(equals(steps('Application').appImageInfo.appImageOption, '2'), 'icr.io/appcafe/open-liberty/samples/getting-started', if(equals(steps('Application').appImageInfo.appImageOption, '3'), 'docker.io/ibmcom/websphere-liberty-sample:1.0.0', steps('Application').appImageInfo.appImagePath))]",
            "appReplicas": "[int(steps('Application').appLoadBalancingInfo.appReplicas)]"
        }
    }
}
